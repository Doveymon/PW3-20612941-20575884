#include <LiquidCrystal.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

Adafruit_MPU6050 mpu;

const int rs = 8, en = 9, d4 = 4, d5 = 5, d6 = 6, d7 = 7, IR1 = A3, IR2 = A2;
LiquidCrystal lcd(8, 9, 12, 10, 11, 13);
const int sPin1 = A0, sPin2 = A1;

int in1 = 0;
int in2 = 1;
int in3 = 2;
int in4 = 3;
int enA = 5;
int enB = 6;

int Dstate1 = 0;
int lastDstate1 = 0;
int Dstate2 = 0;
int lastDstate2 = 0
double D1 = 0;
double D2 = 0;
double tD = -0.5;  
float Distance1 = 0;     
float Distance2 = 0; 
unsigned long countTime = 0;
unsigned long prevTime = 0;
float A=0;
int bump =0;
int spin =0;
int stop =0;
void setup() {

    if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);

  mpu.setGyroRange(MPU6050_RANGE_500_DEG);

  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(enA, OUTPUT);
  pinMode(enB, OUTPUT);

  pinMode(IR1, INPUT);
  pinMode(IR2, INPUT);
  pinMode(sPin1, INPUT);
  pinMode(sPin2, INPUT);

  lcd.begin(16, 2);
  lcd.clear();

  digitalWrite(enA, LOW);
  digitalWrite(enB, LOW);

}

void loop() {
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  unsigned long currTime = millis();
  int Dstate1 = 0;
  int lastDstate1 = 0;
  int Dstate2 = 0;
  int lastDstate2 = 0;
  double lastStateChangeTime1 = 0;
  double lastStateChangeTime2 = 0;
  if (currTime - prevTime >= 200) {
    prevTime = currTime;
    lcd.clear();
    lcd.setCursor(0, 0);
       lcd.print("Time: ");
       lcd.print(currTime / 1000);
       lcd.print("s ");
    lcd.setCursor(0, 1);
      lcd.print("A: "); 
       A=atan(a.acceleration.x/a.acceleration.z) /3 * 180;
       lcd.print(A,1);
    lcd.setCursor(8, 1);
       tD = (Distance1 + Distance2) / 200;
       lcd.print("D: ");
       lcd.print(tD, 2);
       lcd.print("m ");
    if ( A >15 && bump<1 && spin<1 ) { 
          bump=bump+1;
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, HIGH);
    analogWrite(enA, 255);
    analogWrite(enB, 255);
        delay(1100);
    analogWrite(enA, 0);
    analogWrite(enB, 0);
    }
    if (A <20 && bump>0 && spin<1){
      A=0;
      delay(4000);
      digitalWrite(in2, HIGH);
      digitalWrite(in1, LOW);
      digitalWrite(in3, HIGH);
      digitalWrite(in4, LOW);
      analogWrite(enA, 255);
      analogWrite(enB, 255);
      delay(2000);
      digitalWrite(in1, HIGH);
      digitalWrite(in2, LOW);
      digitalWrite(in4, LOW);
      digitalWrite(in3, HIGH);
      analogWrite(enA, 125);
      analogWrite(enB, 125);
        delay(200);
      analogWrite(enA, 0);
      analogWrite(enB, 0);
          spin=spin+1;
          bump=1;
     }
  }
if(A<-20){
    bump++;
  }
  if (A>-3 && bump>1 && spin>0){
  Dstate1 = digitalRead(sPin1);
    if (Dstate1 != lastDstate1 && Dstate1 == 1) {
      D1= D1 + 0.81;
    }
    lastDstate1 = Dstate1;

    Dstate2 = digitalRead(sPin2);
    if (Dstate2 != lastDstate2 && Dstate2 == 1) {
      D2= D2 + 0.81;
    }
    lastDstate2 = Dstate2;
      
    tD = (D1+D2)/200;
  }
if( fabs(tD - 0.7) < 0.05 && stop <1){
    digitalWrite(in1, LOW);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, LOW);
    analogWrite(enA, 0);
    analogWrite(enB, 0);
    stop++;
    delay(2000); 
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, HIGH);
    analogWrite(enA, 125);
    analogWrite(enB, 125);
    delay(200);
    analogWrite(enA, 0);
    analogWrite(enB, 0);
}

  int Right = analogRead(IR2);
  int Left = analogRead(IR1);
  if ((Right > 100) && (Left > 70) && spin<1) { // Move straight
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, HIGH);
    analogWrite(enA, 255);
    analogWrite(enB, 255);
        delay(20);
        analogWrite(enA, 0);
    analogWrite(enB, 0);
  }else if ((Right > 100) && (Left > 70) && spin>0) { // Move straight
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, HIGH);
    analogWrite(enA, 80);
    analogWrite(enB, 80);
        delay(20);
        analogWrite(enA, 0);
    analogWrite(enB, 0);
  } else if ((Right <100) && (Left < 70)) { // Stop
    digitalWrite(in1, LOW);
    digitalWrite(in2, LOW);
    digitalWrite(in4, LOW);
    digitalWrite(in3, LOW);
    analogWrite(enA, 0);
    analogWrite(enB, 0);
        delay(15);
    analogWrite(enA, 0);
    analogWrite(enB, 0);
  } else if ((Right < 100) && (Left >70)) { // Turn right
    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    digitalWrite(in4, HIGH);
    digitalWrite(in3, LOW);
    analogWrite(enA, 255);
    analogWrite(enB, 255);
    delay(60);
        analogWrite(enA, 0);
    analogWrite(enB, 0);
  } else if ((Right > 100) && (Left < 70)) { // Turn left
    digitalWrite(in1, LOW);
    digitalWrite(in2, HIGH);
    digitalWrite(in4, LOW);
    digitalWrite(in3, HIGH);
    analogWrite(enA, 255);
    analogWrite(enB, 255);
    delay(60);
        analogWrite(enA, 0);
    analogWrite(enB, 0);
  }
  }
